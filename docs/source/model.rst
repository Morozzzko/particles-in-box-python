Описание модели
===============

1. Краткое описание эксперимента
--------------------------------

Есть двумерная коробка, который в произвольном месте
разделена прямоугольной перегородкой с выемкой. В начальный момент времени по разные стороны
от перегородки находятся частицы, которые отличаются лишь цветом.
Затем они начинают двигаться с некоторой одинаковой начальной скоростью, меняя свое направление
при соударении с другими частицами или стенками.

2. Термины
----------

Примечание: все величины измеряются в системе СИ

2.1 Частица

Объект частица описывается геометрической фигурой  “окружность”.

2.2. Координаты центра окружности (пара чисел x и y)

2.3. Вектор скорости (пара чисел (v\ :sub:`x`\, v\ :sub:`y`\))

2.4. Принадлежность частицы к одному из двух типов (0 или 1) - цвет

2.5. Радиус (R)

2.6. Граничное значение координаты m частицы относительно объекта X - это число,
которое высчитывается как a - R, если a > 0, и a + R, если a < 0, где a - граничное значение координаты
объекта X по одной из осей, R - радиус частицы.

2.7. Коробка

2.7.1. Объект "Коробка" описывается геометрической фигурой “прямоугольник”.

2.7.2. Координаты левой и правой границ коробки (пара чисел x и y): :math:`X^0_{L}` и :math:`X^0_{R}`

2.7.3. Координаты верхней и нижней границ коробки (пара чисел x и y): :math:`X^0_{T}` и :math:`X^0_{B}`

2.7.4. Граничные значения для координат x и y частицы относительно коробки

2.8. Перегородка

2.8.1. Объект "Коробка" описывается геометрической фигурой “прямоугольник”.

2.8.2. Центр перегородки (координата по x): :math:`X^1_{C}`

2.8.3. Толщина перегородки - a

2.8.4. Левая и правая границы: :math:`X^1_{L} = X^1_{C} - \frac{a}{2}` и :math:`X^1_{R} = X^1_{C} + \frac{a}{2}`

2.8.5. Верхняя и нижняя границы: :math:`X^1_{T} = X^0_{T}` и :math:`X^1_{B} = X^0_{B}`

2.9. Щель

2.9.1 Объект "Щель" описывается геометрической фигурой “прямоугольник”.

2.9.1. Ширина щели - b

2.9.2. Центр щели (координата по y): :math:`X^2_{C}`

2.9.3. Нижняя и верхняя стороны щели: :math:`X^2_{B} = X^2_{C} - \frac{b}{2}` и :math:`X^1_{T} = X^1_{C} + \frac{b}{2}`

2.9.4. Граничные значения для координат x и y частицы относительно щели

3. Модель
---------

3.1 В начальный момент времени генерируем некоторое состояние в соответствии с начальными условиями

3.2 Количество частиц в левой и правой частях (nLeft и nRight)

3.3 Начальная скорость всех частиц(м/с) (:math:`V_{init}`)

3.4 Добавок к скорости, который получает частица при столкновеннии с нижней/верхней/боковыми стенкой (:math:`\Delta V_{B}/ \Delta V_{T} / \Delta V_{S}`)

3.5 Коэффициент диссипации (loss)

3.6 Ускорение свободного падения (g)

3.7 Параметры коробки

Затем генерируем частички так, чтобы расстояние между любыми их них было не меньше, чем их диаметр.
Частички генерируются по следующему принципу:
задается цвет частички (0 или 1), генерируется угол от 0 до :math:`2\pi`
и затем для получения вектора скорости начальная скорость частицы(для всех частиц она одинаковая)
домножается соответственно на косинус и синус этого угла.

4. Описание логики работы программы
-----------------------------------

**4.1. Проверка двух частиц на сближение**:

#.  Выбираем частицу с наименьшей x-компонентой и находим разность между ее V\ :sub:`x` и второй частицы.
    То же самое проделываем для y-компоненты.
#.  Если обе эти разности меньше нуля, то частицы удаляются по обеим осям, иначе они сближаются хотя бы по одной из осей.

**4.2. Вычисление временного шага**:

Вычисляем временной шаг, исходя из скоростей частиц, с таким расчетом, чтобы даже самая быстрая частица
за этот шаг не проходила расстояние, большее половины своего радиуса (это нужно, чтобы избежать пролета частиц
сквозь границу ящика за один шаг, а также чтобы столкновения частиц между собой не были пропущены):
рассчитаем этот временной интервал по формуле :math:`\Delta t` = :math:`\frac{R}{8V}`, где V – скорость самой быстрой частицы.
Если она равна нулю, то берем в качестве V начальную скорость всех частиц (V\ :sub:`init`), при этом она должна быть
отлична от нуля(если она равна нулю, то берем V = 0.1 (видимо, костыль в коде, я хз))


**4.3. Движение частицы**:

Движение частицы происходит через каждый интервал :math:`\Delta t`.

Изменяем координату частицы: x = x + :math:`V \Delta t`


**4.4 Столкновение двух частиц**:

1.  Вычислим часть скорости, остающейся после удара:
    factor = :math:`\sqrt{1 - loss}`

2.  Найдем расстояние частиц по x и по y:

.. math::

    d_x = |x_2 - x_1|

    d_y = |y_2 - y_1|

3.  Вычислим расстояние между центрами частиц: :math:`d = \sqrt{d_x^2+d_y^2}`.

4.  Вычислим:

.. math::
    \sin\alpha = \frac{d_y}{d}

    \cos\alpha = \frac{d_x}{d}

5.  Вычислим:

.. math::
    {d_V}_x = {V_x}_1 - {V_x}_2

    {d_V}_y = {V_y}_1 - {V_y}_2
6.  Изменим существующие x- и y- составляющие векторов скорости у наших частичек:

.. math::
    V_{x_1} = ({d_V}_x \sin^2\alpha – {d_V}_y \sin\alpha \cos\alpha + {V_x}_2)factor

    V_{y_1} = ({d_V}_y \cos^2\alpha – {d_V}_x \sin\alpha \cos\alpha + {V_y}_2)factor

    V_{x_2} = ({d_V}_x \cos^2\alpha + {d_V}_y \sin\alpha \cos\alpha + {V_x}_2)factor

    V_{y_2} = ({d_V}_y \sin^2\alpha + {d_V}_x \sin\alpha \cos\alpha + {V_y}_2)factor

Если расстояние между частицами меньше диаметра частицы, то:

если :math:`y_1 > y_2`, то изменим координаты первой частицы:

.. math::

    x = x + (2R – d)\cos\alpha

    y = y + (2R – d)\sin\alpha

если :math:`y_2 > y_1`, то изменим координаты второй частицы:

.. math::

    x = x - (2R – d) \cos\alpha

    y = y - (2R – d) \sin\alpha

**4.5 Столкновение частицы со стенками**:


Пусть частица в данный момент имеет координаты (x, y) и вектор ее скорости равен :math:`(V_x, V_y)`

1) Если частица столкнулась с верхней стенкой (y > :math:`X^0_{T} - R` и
:math:`V_y > 0` ):

.. math::

    y = X^0_{T} - R

    V_y = -(V_y + \Delta V_{T})

2) Если частица столкнулась с нижней стенкой (y < :math:`X^0_{B} + R` и
:math:`V_y < 0` ):

.. math::

    y = X^0_{B} + R

    V_y = -(V_y - \Delta V_{B})

3) Если частица столкнулась с левой стенкой (x < :math:`X^0_{L} + R` и
:math:`V_x < 0` ):

.. math::

    x = X^0_{L} + R

    V_x = -(V_x - \Delta V_{S})

4) Если частица столкнулась с правой стенкой (x > :math:`X^0_{R} - R` и
:math:`V_x > 0` ):

.. math::

    x = X^0_{R} - R

    V_x = -(V_x + \Delta V_{S})

5) Если частица находится в в диапазоне :math:`X^1_{L} - R < x < X^1_{R} + R`, то:

    1. Если частица находится внутри щели (:math:`X^1_{L} < x < X^1_{R}`), то:

        1.  Если частица ударяется о верхнюю границу дырки (:math:`y > X^2_{T} - R`  и :math:`V_y > 0`),
            то:

            .. math::

                y = X^2_{T} - R

                V_y = -(V_y + \Delta V_{T})

        2. Если частица ударяется о нижнюю границу дырки (:math:`y > X^2_{B} + R`  и :math:`V_y < 0`), то:

            .. math::

                y = X^2_{B} + R

                V_y = -(V_y - \Delta V_{B})

    2. Если частица не попала в щель (:math:`y > X^2_{T}` или :math:`y < X^2_{B}`), то:

        1. Если частица находится по левую часть от стенки (:math:`x < X^1_{C}` и :math:`V_x > 0`), то:

            .. math::

                x = X^1_{L} - R

                V_x = -(V_x + \Delta V_{S})

        2. Если частица находится по правую часть от стенки (:math:`x > X^1_{C}` и :math:`V_x < 0`), то:

            .. math::

                x = X^1_{R} + R

                V_x = -(V_x - \Delta V_{S})



**4.6. Моделирование временного шага**:

#.  Сначала происходит движение всех частиц на время :math:`\Delta t`

#.  Проверяется столкновение частиц между собой:
    Если расстояние между частицами меньше диаметра частицы и частицы сближаются, то они сталкиваются

#.  Проверяется столкновение частиц со стенками
